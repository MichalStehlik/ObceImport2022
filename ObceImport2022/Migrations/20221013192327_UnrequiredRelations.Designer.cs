// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ObceImport2022.Data;

#nullable disable

namespace ObceImport2022.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221013192327_UnrequiredRelations")]
    partial class UnrequiredRelations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ObceImport2022.Models.District", b =>
                {
                    b.Property<string>("LAU1")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("NUTS3")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LAU1");

                    b.HasIndex("NUTS3");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("ObceImport2022.Models.Municipality", b =>
                {
                    b.Property<string>("LAU2")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("LAU1")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LAU2");

                    b.HasIndex("LAU1");

                    b.ToTable("Municipalities");
                });

            modelBuilder.Entity("ObceImport2022.Models.Population", b =>
                {
                    b.Property<string>("LAU2")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<double>("Age")
                        .HasColumnType("float");

                    b.Property<int>("Men")
                        .HasColumnType("int");

                    b.Property<double>("MensAge")
                        .HasColumnType("float");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("Women")
                        .HasColumnType("int");

                    b.Property<double>("WomensAge")
                        .HasColumnType("float");

                    b.HasKey("LAU2", "Year");

                    b.ToTable("Populations", (string)null);
                });

            modelBuilder.Entity("ObceImport2022.Models.Region", b =>
                {
                    b.Property<string>("NUTS3")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("LAU2")
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NUTS3");

                    b.HasIndex("LAU2")
                        .IsUnique()
                        .HasFilter("[LAU2] IS NOT NULL");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("ObceImport2022.Models.District", b =>
                {
                    b.HasOne("ObceImport2022.Models.Region", "Region")
                        .WithMany("Districts")
                        .HasForeignKey("NUTS3")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("ObceImport2022.Models.Municipality", b =>
                {
                    b.HasOne("ObceImport2022.Models.District", "District")
                        .WithMany("Municipalities")
                        .HasForeignKey("LAU1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("ObceImport2022.Models.Population", b =>
                {
                    b.HasOne("ObceImport2022.Models.Municipality", "Municipality")
                        .WithMany("PopulationData")
                        .HasForeignKey("LAU2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("ObceImport2022.Models.Region", b =>
                {
                    b.HasOne("ObceImport2022.Models.Municipality", "Capital")
                        .WithOne("CapitalOf")
                        .HasForeignKey("ObceImport2022.Models.Region", "LAU2")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Capital");
                });

            modelBuilder.Entity("ObceImport2022.Models.District", b =>
                {
                    b.Navigation("Municipalities");
                });

            modelBuilder.Entity("ObceImport2022.Models.Municipality", b =>
                {
                    b.Navigation("CapitalOf");

                    b.Navigation("PopulationData");
                });

            modelBuilder.Entity("ObceImport2022.Models.Region", b =>
                {
                    b.Navigation("Districts");
                });
#pragma warning restore 612, 618
        }
    }
}
